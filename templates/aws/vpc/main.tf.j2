{% for vpc in vpcs %}
  # Accessing the VPC configuration
  {% for config in vpc.configuration %}

  # Define VPC name
  {% set vpc_name = config.name if config.name is defined else 'vpc_' ~ loop.index %}
  # Validate VPC configuration

  {% if config.cidr_block is not defined %}
  resource "aws_vpc" "{{vpc_name}}" {
    
  }
  {% else %}
  resource "aws_vpc" "{{vpc_name}}" {
    {% for key, value in config.items() %}
      {% if value is defined %}
        {% if key == 'tags' %}
          tags  = merge({},
            {% for tag in config.tags %}
              {
                {{ tag.key }} = "{{ tag.value }}"
              }
              {% if not loop.last %},{% endif %}
            {% endfor %}
          )
        {% else %}
          {{ key }} = {{ value | tojson }}
        {% endif %}
      {% endif %}
    {% endfor %}
  }
  {% endif %}
  {% endfor %}

  # Accessing the Gateway configuration within the same VPC context
  {% for gateway in vpc.gateway_configuration %}
    {%if gateway is not defined %}
        resource "aws_internet_gateway" "gateway_{{loop.index}}" {
          
        }
    {%endif%}
    # Define Gateway name
    {% set gateway_name = gateway.name if gateway.name is defined else 'gateway_' ~ loop.index %}

    # Here you can now reference the specific VPC for each gateway
    {% if gateway.type == 'default' %}
    resource "aws_internet_gateway" "{{gateway_name}}" {
      vpc_id = aws_vpc.{{vpc_name}}.id
      tags  = merge({},
        {% for tag in gateway.tags %}
          {
            {{ tag.key }} = "{{ tag.value }}"
          }
          {% if not loop.last %},{% endif %}
        {% endfor %}
      )
    }
    {% elif gateway.type == 'nat' and gateway.public_gateway_name is defined %}
    resource "aws_nat_gateway" "{{gateway_name}}" {
      subnet = aws_subnet.subnet_{{gateway.subnet_name}}.id
      depends_on = [aws_internet_gateway.{{gateway.public_gateway_name}}]
      tags  = merge({},
        {% for tag in gateway.tags %}
          {
            {{ tag.key }} = "{{ tag.value }}"
          }
          {% if not loop.last %},{% endif %}
        {% endfor %}
      )
    }
    {% endif %}
  {% endfor %}
   # Start of Subnet configuration
   {%for config in vpc.subnets%}
    # Define Subnet name
    {% set subnet_name = config.name if config.name is defined else 'subnet_' ~ loop.index %}
    {%if config.vpc_id is not defined%}
        resource "aws_subnet" "subnet_{{name}}"  {
          vpc_id     = aws_vpc.{{vpc_name}}.id
          {%for key, value in config.items()%}
            {%if key == "tags"%}
              tags  = merge({},
                  {% for tag in config.tags %}
                    {
                      {{ tag.key }} = "{{ tag.value }}"
                    }
                    {% if not loop.last %},{% endif %}
                  {% endfor %}
                )
            {%endif%}
            {{key}} = "{{value}}"
          {%endfor%}
      }
    {%endif%}
   {%endfor%}
{% endfor %}


{%for route in vpcs.route_configuration%}
 {% set route_name = route.name if route.name is defined else 'route_' ~ loop.index %}
  {%if route is defined%}
    resource "aws_route_aws_route_table" "{{route_name}}" {
      tags  = merge({},
        {% for tag in route.tags %}
          {
            {{ tag.key }} = "{{ tag.value }}"
          }
          {% if not loop.last %},{% endif %}
        {% endfor %}
      )
    }
  {%endif%}
{%endfor%}
